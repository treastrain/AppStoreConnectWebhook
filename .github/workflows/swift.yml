name: Swift Build & Test

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  XCODE_SELECT_PATH: '/Applications/Xcode_16.4.app/Contents/Developer'

jobs:
  swift-build:
    name: Swift Build & Test
    strategy:
      fail-fast: false
      matrix:
        os: [macos-15, ubuntu-22.04, ubuntu-24.04]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Set Xcode version
      if: ${{ matrix.os == 'macos-15' }}
      run: sudo xcode-select -s '${{ env.XCODE_SELECT_PATH }}'
    - name: Show Swift version
      run: swift --version
    - name: Show Swift Package Manager version
      run: swift package --version
    - uses: actions/checkout@v4
    - name: Build
      run: swift build -v | tee swift-build_${{ matrix.os }}.log && exit ${PIPESTATUS[0]}
    - name: Upload build log
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: swift build log (${{ matrix.os }})
        path: |
          swift-build_${{ matrix.os }}.log
    - name: Run tests
      run: swift test -v | tee swift-test_${{ matrix.os }}.log && exit ${PIPESTATUS[0]}
    - name: Upload test log
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: swift test log (${{ matrix.os }})
        path: |
          swift-test_${{ matrix.os }}.log
  swift-build-amazonlinux:
    name: Swift Build & Test (amazonlinux2)
    runs-on: ubuntu-latest
    container:
      image: swift:amazonlinux2
      volumes:
        - /node20217:/node20217:rw,rshared
        - /node20217:/__e/node20:ro,rshared
    steps:
    - name: Show Swift version
      run: swift --version
    - name: Show Swift Package Manager version
      run: swift package --version
    - name: Prepare Node.js
      run: |
        curl -LO https://unofficial-builds.nodejs.org/download/release/v20.19.2/node-v20.19.2-linux-x64-glibc-217.tar.gz
        tar -xf node-v20.19.2-linux-x64-glibc-217.tar.gz --strip-components 1 -C /node20217
        ldd /__e/node20/bin/node
    - uses: actions/checkout@v4
    - name: Build
      run: swift build -v | tee swift-build_amazonlinux2.log && exit ${PIPESTATUS[0]}
    - name: Upload build log
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: swift build log (amazonlinux2)
        path: |
          swift-build_amazonlinux2.log
    - name: Run tests
      run: swift test -v | tee swift-test_amazonlinux2.log && exit ${PIPESTATUS[0]}
    - name: Upload test log
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: swift test log (amazonlinux2)
        path: |
          swift-test_amazonlinux2.log
